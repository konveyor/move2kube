apiVersion: move2kube.konveyor.io/v1alpha1
kind: Parameterizer
metadata:
  name: p1
spec:
  parameterizers:
    # Case 1:
    - target: 'metadata.annotations."openshift.io/node-selector"'
      filters:
        - kind: Deployment
          apiVersion: "apps/v1|extensions/v1beta1"
        - kind: Service
          apiVersion: v1
    # Case 2: TODO
    # - target: "spec.replicas"
    #   template: "${common.replicas}"
    #   filters:
    #     - kind: Deployment
    #       apiVersion: ".*/v1.*"
    # Case 3: TODO
    # - target: 'spec.replicas'
    #   default: 2
    #   filters:
    #     - kind: 'Deployment'
    #       apiVersion: '.*v1.*'
    # Case 4:
    - target: "spec.replicas"
      template: "${common.replicas}"
      default: 10
      filters:
        - kind: Deployment
          apiVersion: ".*/v1.*"
    # Case 5:
    # - target: "spec.template.spec.containers.[0].image"
    #   default: '${imageregistry.url}/${imageregistry.namespace}/${image.name}:${image.tag}'
    #   filters:
    #     - kind: Deployment
    #       apiVersion: "extension/v1beta1"
    # Case 6:
    # - target: "spec.template.spec.containers.[0].image"
    #   template: '${imageregistry.url}/${imageregistry.namespace}/${image.name}:${image.tag}'
    #   default: us.icr.io/move2kube/myimage:myimagetag
    #   filters:
    #     - kind: Deployment
    #       apiVersion: "extension/v1beta1"
    # Case 7:
    - target: 'spec.template.spec.containers.[containerName:name].image'
      template: '${imageregistry.url}/${imageregistry.namespace}/${services.$(metadataName).containers.$(containerName).image.name}:${services.$(metadataName).containers.$(containerName).image.tag}'
      default: us.icr.io/move2kube/myimage:latest
      filters:
        - kind: Deployment
          apiVersion: ".*/v1.*"
      parameters:
        - name: services.$(metadataName).containers.$(containerName).image.name
          values:
          - envs: [dev, staging, prod]
            metadataName: nginx
            value: nginx-allenvs
          - envs: [prod]
            metadataName: javaspringapp
            value: openjdk-prod8
            custom:
              containerName: apicontainer
          - envs: [dev]
            metadataName: javaspringapp
            value: openjdk-dev8
            custom:
              containerName: apicontainer
          - envs: [prod]
            metadataName: javaspringapp
            value: mysql-prod
            custom:
              containerName: mysqlcontainer
          - envs: [dev]
            metadataName: javaspringapp
            value: mysql-dev
            custom:
              containerName: mysqlcontainer
    - target: "spec.template.spec.containers.[0].name"
      filters:
        - kind: Deployment
          apiVersion: "apps/v1"
